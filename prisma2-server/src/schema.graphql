### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Attack {
  damage: String!
  id: Int!
  name: String!
}

input AttackCreateManyWithoutSpecialInput {
  connect: [AttackWhereUniqueInput!]
  create: [AttackCreateWithoutPokemonAttackInput!]
}

input AttackCreateWithoutPokemonAttackInput {
  damage: String!
  name: String!
}

input AttackWhereUniqueInput {
  id: Int
}

type Mutation {
  addPokemon(data: PokemonCreateInput!): Pokemon!
}

type Pokemon {
  attacks: PokemonAttack
  id: ID!
  name: String!
  number: Int!
}

type PokemonAttack {
  id: Int!
  special(after: String, before: String, first: Int, last: Int, skip: Int): [Attack!]
}

input PokemonAttackCreateOneWithoutAttacksInput {
  connect: PokemonAttackWhereUniqueInput
  create: PokemonAttackCreateWithoutPokemonInput
}

input PokemonAttackCreateWithoutPokemonInput {
  special: AttackCreateManyWithoutSpecialInput
}

input PokemonAttackWhereUniqueInput {
  id: Int
}

input PokemonCreateInput {
  attacks: PokemonAttackCreateOneWithoutAttacksInput
  id: ID
  name: String!
  number: Int!
}

type Query {
  pokemon(name: String): [Pokemon!]!
  pokemons(after: String, before: String, first: Int, last: Int, skip: Int): [Pokemon!]
}

type Subscription {
  newPokemon: Pokemon!
}
